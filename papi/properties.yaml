---
  openapi: "3.0.0"
  servers:
    - url: https://akzz-XXXXXXXXXXXXXXXX-XXXXXXXXXXXXXXXX.luna.akamaiapis.net/papi/v1
  info:
    title: "Properties"
    version: v1
  paths:
    /properties:
      get:
        summary: List properties
        description: |
          This operation lists properties available for the current contract and group.
        operationId: "GET_properties"
        responses:
          200:
            description: |
              Success
            headers:
              X-Limit-Properties-Per-Contract-Limit:
                schema:
                  type: string
              X-Limit-Properties-Per-Contract-Remaining:
                schema:
                  type: string
            content:
              application/json:
                example:
                  properties:
                    items:
                      - accountId: act_1-1TJZFB
                        contractId: ctr_1-1TJZH5
                        groupId: grp_15225
                        propertyId: prp_175780
                        propertyName: "example.com"
                        latestVersion: 2
                        stagingVersion: 1
                        productionVersion: null
                        assetId: aid_101
                        note: "Notes about example.com"
                      - accountId: act_1-1TJZFB
                        contractId: ctr_1-1TJZH5
                        groupId: grp_15225
                        propertyId: prp_175781
                        propertyName: "m.example.com"
                        latestVersion: 1
                        stagingVersion: null
                        productionVersion: null
                        assetId: aid_101
                        note: "Notes about m.example.com"
                schema:
                  $ref: "#/components/schemas/property-get-response"
        parameters:
          - $ref: "#/components/parameters/trait_usePrefixesHeader_PAPI-Use-Prefixes"
          - $ref: "#/components/parameters/trait_contractParamRequired_contractId"
          - $ref: "#/components/parameters/trait_groupParamRequired_groupId"
      post:
        summary: Create or clone a property
        description: |
          This operation either creates a new property from scratch, or
          bases one on another property's rule tree and optionally its set
          of assigned hostnames.

          When cloning with `copyHostnames` enabled, you can apply the
          same set of hostnames as the original property. Regardless,
          the new property clones the rule tree from the original,
          along with its assigned `ruleFormat`. Setting
          `cloneFromVersionEtag` allows you to perform an etags check
          to ensure the original property hasn't changed. See
          [Concurrency control](doc:concurrency-control) for guidance.

          Note that unlike a new property version, a property that you
          clone along with all of its hostnames can be activated
          independently of the property on which it was based. If you
          activate a property that specifies hostnames that are
          already active on another property, the other property
          automatically gets a new version activated without the
          common set of hostnames, or deactivated if all its hostnames
          are part of the new property.

          PAPI's ability to create and clone new properties means that
          you can design a system of rule templates targeted to
          specific domains, rather than maintain a single set of rules
          with conditional logic for your full range of
          domains. Maintaining properties manually within the Control
          Center interface limited you to that more consolidated
          approach, but PAPI allows you to deploy rules more
          efficiently. In either case, PAPI makes it much easier for
          you to support a large, flexible set of domains.
        operationId: "POST_properties"
        responses:
          201:
            description: ""
            headers:
              X-Limit-Properties-Per-Contract-Limit:
                schema:
                  type: string
              X-Limit-Properties-Per-Contract-Remaining:
                schema:
                  type: string
              Location:
                schema:
                  type: string
            content:
              application/json:
                example:
                  propertyLink: "/papi/v0/properties/prp_173137?contractId=ctr_1-1TJZH5&groupId=grp_15225"
                schema:
                  $ref: "#/components/schemas/property-create-response"
        requestBody:
          required: true
          content:
            application/json:
              example:
                productId: prd_Alta
                propertyName: "my.new.property.com"
                cloneFrom:
                  propertyId: prp_175780
                  version: 2
                  cloneFromVersionEtag: a9dfe78cf93090516bde891d009eaf57
                  copyHostnames: true
              schema:
                $ref: "#/components/schemas/property-create-request"
        parameters:
          - $ref: "#/components/parameters/trait_usePrefixesHeader_PAPI-Use-Prefixes"
          - $ref: "#/components/parameters/trait_contractParamRequired_contractId"
          - $ref: "#/components/parameters/trait_groupParamRequired_groupId"
    /properties/{propertyId}:
      get:
        summary: Get a property
        description: |
          This operation gets a specific property. You can call this operation by specifying any of the `propertyId` members from a [list of properties](https://papi-akamai.readme.io/reference/properties#get_properties), or by running a GET on the `propertyLink` response when [creating a new property](https://papi-akamai.readme.io/reference/properties#post_properties).
        operationId: "GET_properties-propertyId"
        responses:
          200:
            description: ""
            content:
              application/json:
                example:
                  properties:
                    items:
                      - accountId: act_1-1TJZFB
                        contractId: ctr_1-1TJZH5
                        groupId: grp_15225
                        propertyId: prp_175780
                        propertyName: "example.com"
                        latestVersion: 2
                        stagingVersion: 1
                        productionVersion: null
                        assetId: aid_101
                        note: "Notes about example.com"
                schema:
                  $ref: "#/components/schemas/property-get-response"
        parameters:
          - $ref: "#/components/parameters/trait_usePrefixesHeader_PAPI-Use-Prefixes"
          - $ref: "#/components/parameters/trait_contractParamOptional_contractId"
          - $ref: "#/components/parameters/trait_groupParamOptional_groupId"
      delete:
        summary: Remove a property
        description: |
          Removes a specific property, which you can only do if none of
          its versions are currently active. Activating another
          property with the same set of hostnames automatically triggers
          a deactivation on the targeted property. See
          [Create a new activation](https://papi-akamai.readme.io/reference/propertiespropertyidactivations#post_properties-propertyid-activations) for details.
          A successful DELETE results in a 200 response with the link to
          the remaining properties for the given contract and group.
          Attempting to delete an active property results in a 500
          error. Attempting to delete an unknown property results in a
          404 error.
        operationId: "DELETE_properties-propertyId"
        responses:
          200:
            description: ""
            content:
              application/json:
                example:
                  message: "Deletion Successful."
                schema:
                  $ref: "#/components/schemas/property-delete-response"
        parameters:
          - $ref: "#/components/parameters/trait_contractParamOptional_contractId"
          - $ref: "#/components/parameters/trait_groupParamOptional_groupId"
      parameters:
        - name: propertyId
          in: path
          required: true
          description: |
            Unique identifier for the property.
            See [ID prefixes](doc:id-prefixes)
            for details on omitting the value's `prp_` prefix.
          schema:
            type: string
  components:
    schemas:
      property-create-request:
        description: |
          Contains configuration data to apply to edge content. Relevant response objects appear within the outer [Envelope](#envelope) object's `properties.items` array.
        type: object
        required:
          - "productId"
          - "propertyName"
        properties:
          productId:
            description: |
              The product under which the property was created. See [ID prefixes](doc:id-prefixes) for details on how to omit the ID's `prd_` prefix.
            type: string
          propertyName:
            type: string
          ruleFormat:
            description: |
              On GET, reflects the property's current format. Otherwise on POST, assigns a specific rule format to the property. Ignored on PUT, since you need to modify the `Content-Type` to change rule formats. For details, see [Update rules to a newer set of features](doc:update-rules-to-a-newer-set-of-features).
            type: string
          cloneFrom:
            description: |
              Optionally identifies another property instance to clone when making a POST request to create a new property. You need to assign the same contract and group to the cloned property.
            type: object
            required:
              - "propertyId"
              - "version"
            properties:
              cloneFromVersionEtag:
                description: |
                  Performs an etag data integrity check on the original property. See [Concurrency control](doc:concurrency-control) for guidance.
                type: string
              copyHostnames:
                default: false
                description: |
                  Assigns the same set of hostnames to the new property, `false` by default.
                type: boolean
              propertyId:
                description: |
                  Specifies the property to clone. See [ID prefixes](doc:id-prefixes) for details on how to omit the ID's `prp_` prefix.
                type: string
              version:
                description: |
                  Specifies the version of the property to clone.
                type: integer
      property-create-response:
        description: |
          Provides a hypermedia link to a newly created resource. The response's single member name indicates the type of resource.
        type: object
        required:
          - "propertyLink"
        properties:
          propertyLink:
            description: |
              Links the newly created property.
            type: string
      property-get-response:
        description: |
          A common outer wrapping object structure that provides additional contextual details for a set of requested data. The data itself is available under various inner members' `items` array, even individual items. See [ID prefixes](doc:id-prefixes) for more information.
        type: object
        properties:
          properties:
            description: |
              The set of requested properties, available within an `items` array.
            type: object
            properties:
              items:
                type: array
                items:
                  description: |
                    Contains configuration data to apply to edge content. Relevant response objects appear within the outer [Envelope](#envelope) object's `properties.items` array.
                  type: object
                  required:
                    - "accountId"
                    - "assetId"
                    - "contractId"
                    - "groupId"
                    - "latestVersion"
                    - "note"
                    - "productionVersion"
                    - "propertyId"
                    - "propertyName"
                    - "stagingVersion"
                  properties:
                    accountId:
                      description: |
                        Identifies the account under which the property was created. See [ID prefixes](doc:id-prefixes) for details on how to omit the ID's `act_` prefix.
                      type: string
                    assetId:
                      description: |
                        An alternative identifier for the property, for internal use.
                      type: string
                    contractId:
                      default: SIERRA
                      description: |
                        Identifies the contract under which the property was created. See [ID prefixes](doc:id-prefixes) for details on how to omit the ID's `ctr_` prefix.
                      type: string
                    groupId:
                      description: |
                        Identifies the group to which the property is assigned. See [ID prefixes](doc:id-prefixes) for details on how to omit the ID's `grp_` prefix.
                      type: string
                    latestVersion:
                      description: |
                        Specifies the most recent version of the property.
                      type: integer
                    note:
                      description: |
                        Further descriptive commentary.
                      type: string
                    productId:
                      description: |
                        The product assigned to the property, required when POSTing a new property. See [ID prefixes](doc:id-prefixes) for details on how to omit the ID's `prd_` prefix.
                      type: string
                    productionVersion:
                      description: |
                        The most recent version to be activated to the production network, otherwise `null`.
                      type: integer
                    propertyId:
                      description: |
                        The property's unique identifier. See [ID prefixes](doc:id-prefixes) for details on how to omit the ID's `prp_` prefix.
                      type: string
                    propertyName:
                      description: |
                        A descriptive name for the property.
                      type: string
                    ruleFormat:
                      type: string
                    stagingVersion:
                      description: |
                        The most recent version to be activated to the test network, otherwise `null`.
                      type: integer
      property-delete-response:
        type: object
        required:
          - "message"
        properties:
          message:
            type: string
    responses: {}
    parameters:
      trait_contractParamRequired_contractId:
        name: contractId
        in: query
        required: true
        description: |
          Unique identifier for the contract.
          See [ID prefixes](doc:id-prefixes)
          for details on omitting the value's `ctr_` prefix.
        schema:
          type: string
      trait_contractParamOptional_contractId:
        name: contractId
        in: query
        description: |
          Unique identifier for the contract.
          The parameter is optional if the property has been
          provisioned under only one contract.
          Otherwise you need to specify it along with the `groupId`.
          (In other operations that don't specify a `propertyId` URL
          parameter, this parameter is always required.)
          See [ID prefixes](doc:id-prefixes)
          for details on omitting the value's `ctr_` prefix.
        schema:
          type: string
      trait_contractParamOptionalBulk_contractId:
        name: contractId
        in: query
        description: |
          Optionally filters bulk searches to properties provisioned
          under the specified contract. For bulk operations, you can
          specify `contractId` and `groupId` independently from each
          other.
        schema:
          type: string
      trait_groupParamRequired_groupId:
        name: groupId
        in: query
        required: true
        description: |
          Unique identifier for the group.
          See [ID prefixes](doc:id-prefixes)
          for details on omitting the value's `grp_` prefix.
        schema:
          type: string
      trait_groupParamOptional_groupId:
        name: groupId
        in: query
        description: |
          Unique identifier for the group.
          The parameter is optional if the property has been
          provisioned under only one group.
          Otherwise you need to specify it along with the `contractId`.
          (In other operations that don't specify a `propertyId` URL
          parameter, this parameter is always required.)
          See [ID prefixes](doc:id-prefixes)
          for details on omitting the value's `grp_` prefix.
        schema:
          type: string
      trait_groupParamOptionalBulk_groupId:
        name: groupId
        in: query
        description: |
          Optionally filters bulk searches to properties provisioned
          under the specified group. For bulk operations, you can
          specify `contractId` and `groupId` independently from each
          other.
        schema:
          type: string
      trait_optionsParam_options:
        name: options
        in: query
        description: |
          Comma-separated list of options to enable; `mapDetails`
          enables extra mapping-related information.
        schema:
          type: string
      trait_validateHostnamesParam_validateHostnames:
        name: validateHostnames
        in: query
        description: |
          When `false` (the default), skips validation tests that
          would identify potential hostname-related problems within
          the response object's `errors` and `warnings` arrays. See
          [Property hostname errors](doc:property-hostname-errors)
          for details on relevant error feedback. See
          [Fast validation, activation, and fallback](doc:fast-validation)
          for details on the delays this might avoid.
        schema:
          default: true
          type: boolean
      trait_validateRulesParam_validateRules:
        name: validateRules
        in: query
        description: |
          Set to `true` by default. When `false`, skips validation
          tests that would identify potential problems within the
          response object's `errors` and `warnings` arrays. See the
          [JSON problems](doc:json-problem-responses)
          section for details on this error feedback. See
          [Fast validation, activation, and fallback](doc:fast-validation)
          for details on the delays this might avoid.
        schema:
          default: true
          type: boolean
      trait_validateModeParam_validateMode:
        name: validateMode
        in: query
        description: |
          With `validateRules` enabled, setting this to `fast`
          performs a quick validation check based on the provided
          JSON. This is faster than the default `full` validation,
          which performs more extensive checks on the converted XML
          metadata configuration.
        schema:
          default: full
          type: string
          enum:
            - "full"
            - "fast"
      trait_dryRunParam_dryRun:
        name: dryRun
        in: query
        description: |
          With `validateRules` also enabled, allows for a _dry run_ in
          order to gather any possible errors without saving the rule
          tree.
        schema:
          default: false
          type: boolean
      trait_paginated_offset:
        name: offset
        in: query
        description: |
          For paginated responses, specifies the page of results to
          include, starting from `0`.
        schema:
          minimum: 0
          type: integer
      trait_paginated_limit:
        name: limit
        in: query
        description: |
          For paginated responses, specifies the number of results to
          include on each page.
        schema:
          minimum: 1
          type: integer
      trait_usePrefixesHeader_PAPI-Use-Prefixes:
        name: "PAPI-Use-Prefixes"
        description: |
          Sets whether to display three-letter prefixes in various ID values in response data. This may override the client's default `usePrefixes` setting. See [ID Prefixes](doc:id-prefixes).
        in: header
        required: true
        schema:
          type: string
    examples: {}
    requestBodies: {}
    headers: {}
    securitySchemes: {}
    links: {}
    callbacks: {}
