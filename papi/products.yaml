---
  openapi: "3.0.0"
  servers:
    - url: https://akzz-XXXXXXXXXXXXXXXX-XXXXXXXXXXXXXXXX.luna.akamaiapis.net/papi/v1
  info:
    title: "Products"
    version: v1
  paths:
    /products:
      get:
        summary: List products
        description: |
          This operation lists the set of products that are available under a given contract. You need a product identifier to create new edge hostnames, CP codes, or properties. The range of rule behaviors available within a property is determined by the assigned product.
        operationId: "GET_products"
        responses:
          200:
            description: ""
            content:
              application/json:
                example:
                  accountId: act_1-1TJZFB
                  contractId: ctr_1-1TJZH5
                  products:
                    items:
                      - productName: "Alta"
                        productId: prd_Alta
                schema:
                  $ref: "#/components/schemas/product-get-response"
        parameters:
          - $ref: "#/components/parameters/trait_usePrefixesHeader_PAPI-Use-Prefixes"
          - $ref: "#/components/parameters/trait_contractParamRequired_contractId"
    /products/{productId}/mapping-use-cases:
      get:
        summary: List use cases
        description: |
          For a given product, this lists Akamai-provided use case scenarios that help optimally map different types of traffic across the Akamai edge network. Optionally run this operation to gather values before [creating a new edge hostname](https://papi-akamai.readme.io/reference/edgehostnames#post_edgehostnames).
        operationId: "GET_products-productId-mapping-use-cases"
        responses:
          200:
            description: ""
            content:
              application/json:
                example:
                  useCases:
                    - useCase: "Download_Mode"
                      type: "GLOBAL"
                      options:
                        - "BACKGROUND"
                        - "FOREGROUND"
                schema:
                  $ref: "#/components/schemas/product-use-cases-get-response"
        parameters:
          - $ref: "#/components/parameters/trait_usePrefixesHeader_PAPI-Use-Prefixes"
          - $ref: "#/components/parameters/trait_contractParamRequired_contractId"
      parameters:
        - name: productId
          in: path
          required: true
          description: |
            Unique identifier for the product.
            See [ID prefixes](doc:id-prefixes)
            for details on omitting the value's `prd_` prefix.
          schema:
            type: string
  components:
    schemas:
      product-get-response:
        description: |
          A common outer wrapping object structure that provides additional contextual details for a set of requested data. The data itself is available under various inner members' `items` array, even individual items. See [ID prefixes](doc:id-prefixes) for more information.
        type: object
        properties:
          accountId:
            type: string
          contractId:
            default: SIERRA
            type: string
          products:
            description: |
              The set of requested products, available within an `items` array.
            type: object
            properties:
              items:
                type: array
                items:
                  description: |
                    Encapsulates information on the product that determines a property's available range of features. Relevant response objects appear within the outer [Envelope](#envelope) object's `products.items` array.
                  type: object
                  required:
                    - "productId"
                    - "productName"
                  properties:
                    productId:
                      description: |
                        Uniquely identifies each product. See [ID prefixes](doc:id-prefixes) for details on how to omit the ID's `prd_` prefix.
                      type: string
                    productName:
                      description: |
                        A descriptive name for the product.
                      type: string
      product-use-cases-get-response:
        description: |
          A common outer wrapping object structure that provides additional contextual details for a set of requested data. The data itself is available under various inner members' `items` array, even individual items. See [ID prefixes](doc:id-prefixes) for more information.
        type: object
        properties:
          useCases:
            description: |
              The list of available use cases for edge hostnames associated with the product.
            type: array
            items:
              description: |
                An Akamai-provided preset use case scenario that help optimally map different types of traffic across the Akamai edge network. This read-only object always includes the full set of data members.
              type: object
              required:
                - "useCase"
                - "options"
                - "type"
              properties:
                useCase:
                  description: |
                    Uniquely identifies each use case.
                  type: string
                options:
                  type: array
                  items:
                    description: |
                      Provides a set of values you can choose from. For example, a high-priority file may download in the `FOREGROUND`, or as a slower `BACKGROUND` task.
                    type: string
                type:
                  description: |
                    Identifies the Akamai network over which traffic deploys. The only value currently available is the `GLOBAL` network.
                  type: string
                  enum:
                    - "GLOBAL"
    responses: {}
    parameters:
      trait_contractParamRequired_contractId:
        name: contractId
        in: query
        required: true
        description: |
          Unique identifier for the contract.
          See [ID prefixes](doc:id-prefixes)
          for details on omitting the value's `ctr_` prefix.
        schema:
          type: string
      trait_contractParamOptional_contractId:
        name: contractId
        in: query
        description: |
          Unique identifier for the contract.
          The parameter is optional if the property has been
          provisioned under only one contract.
          Otherwise you need to specify it along with the `groupId`.
          (In other operations that don't specify a `propertyId` URL
          parameter, this parameter is always required.)
          See [ID prefixes](doc:id-prefixes)
          for details on omitting the value's `ctr_` prefix.
        schema:
          type: string
      trait_contractParamOptionalBulk_contractId:
        name: contractId
        in: query
        description: |
          Optionally filters bulk searches to properties provisioned
          under the specified contract. For bulk operations, you can
          specify `contractId` and `groupId` independently from each
          other.
        schema:
          type: string
      trait_groupParamRequired_groupId:
        name: groupId
        in: query
        required: true
        description: |
          Unique identifier for the group.
          See [ID prefixes](doc:id-prefixes)
          for details on omitting the value's `grp_` prefix.
        schema:
          type: string
      trait_groupParamOptional_groupId:
        name: groupId
        in: query
        description: |
          Unique identifier for the group.
          The parameter is optional if the property has been
          provisioned under only one group.
          Otherwise you need to specify it along with the `contractId`.
          (In other operations that don't specify a `propertyId` URL
          parameter, this parameter is always required.)
          See [ID prefixes](doc:id-prefixes)
          for details on omitting the value's `grp_` prefix.
        schema:
          type: string
      trait_groupParamOptionalBulk_groupId:
        name: groupId
        in: query
        description: |
          Optionally filters bulk searches to properties provisioned
          under the specified group. For bulk operations, you can
          specify `contractId` and `groupId` independently from each
          other.
        schema:
          type: string
      trait_optionsParam_options:
        name: options
        in: query
        description: |
          Comma-separated list of options to enable; `mapDetails`
          enables extra mapping-related information.
        schema:
          type: string
      trait_validateHostnamesParam_validateHostnames:
        name: validateHostnames
        in: query
        description: |
          When `false` (the default), skips validation tests that
          would identify potential hostname-related problems within
          the response object's `errors` and `warnings` arrays. See
          [Property hostname errors](doc:property-hostname-errors)
          for details on relevant error feedback. See
          [Fast validation, activation, and fallback](doc:fast-validation)
          for details on the delays this might avoid.
        schema:
          default: true
          type: boolean
      trait_validateRulesParam_validateRules:
        name: validateRules
        in: query
        description: |
          Set to `true` by default. When `false`, skips validation
          tests that would identify potential problems within the
          response object's `errors` and `warnings` arrays. See the
          [JSON problems](doc:json-problem-responses)
          section for details on this error feedback. See
          [Fast validation, activation, and fallback](doc:fast-validation)
          for details on the delays this might avoid.
        schema:
          default: true
          type: boolean
      trait_validateModeParam_validateMode:
        name: validateMode
        in: query
        description: |
          With `validateRules` enabled, setting this to `fast`
          performs a quick validation check based on the provided
          JSON. This is faster than the default `full` validation,
          which performs more extensive checks on the converted XML
          metadata configuration.
        schema:
          default: full
          type: string
          enum:
            - "full"
            - "fast"
      trait_dryRunParam_dryRun:
        name: dryRun
        in: query
        description: |
          With `validateRules` also enabled, allows for a _dry run_ in
          order to gather any possible errors without saving the rule
          tree.
        schema:
          default: false
          type: boolean
      trait_paginated_offset:
        name: offset
        in: query
        description: |
          For paginated responses, specifies the page of results to
          include, starting from `0`.
        schema:
          minimum: 0
          type: integer
      trait_paginated_limit:
        name: limit
        in: query
        description: |
          For paginated responses, specifies the number of results to
          include on each page.
        schema:
          minimum: 1
          type: integer
      trait_usePrefixesHeader_PAPI-Use-Prefixes:
        name: "PAPI-Use-Prefixes"
        description: |
          Sets whether to display three-letter prefixes in various ID values in response data. This may override the client's default `usePrefixes` setting. See [ID Prefixes](doc:id-prefixes).
        in: header
        required: true
        schema:
          type: string
    examples: {}
    requestBodies: {}
    headers: {}
    securitySchemes: {}
    links: {}
    callbacks: {}
