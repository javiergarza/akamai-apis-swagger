---
  openapi: "3.0.0"
  servers:
    - url: https://akzz-XXXXXXXXXXXXXXXX-XXXXXXXXXXXXXXXX.luna.akamaiapis.net/papi/v1
  info:
    title: "Property version rules"
    version: v1
  paths:
    /properties/{propertyId}/versions/{propertyVersion}/rules:
      get:
        summary: Get a rule tree
        description: |
          This gets the entire rule tree for a property version. See the [Rule Trees](doc:rule-trees) section for details on the response object's structure. Also use this operation to update from one rule format to another more recent version, incrementing the assigned set of features. See [Update rules to a newer set of features](doc:update-rules-to-a-newer-set-of-features).
        operationId: "GET_properties-propertyId-versions-propertyVersion-rules"
        responses:
          200:
            description: ""
            headers:
              X-Limit-Elements-Per-Property-Limit:
                schema:
                  type: string
              X-Limit-Elements-Per-Property-Remaining:
                schema:
                  type: string
              X-Limit-Max-Nested-Rules-Limit:
                schema:
                  type: string
              X-Limit-Max-Nested-Rules-Remaining:
                schema:
                  type: string
              X-Limit-Clientip-Per-Property-Limit:
                schema:
                  type: string
              X-Limit-Clientip-Per-Property-Remaining:
                schema:
                  type: string
              X-Limit-Max-Clientip-Per-Match-Limit:
                schema:
                  type: string
              X-Limit-Max-Clientip-Per-Match-Remaining:
                schema:
                  type: string
              Etag:
                schema:
                  type: string
            content:
              application/json:
                example:
                  accountId: act_1-1TJZFB
                  contractId: ctr_1-1TJZH5
                  groupId: grp_15225
                  propertyId: prp_173136
                  propertyVersion: 3
                  etag: a9dfe78cf93090516bde891d009eaf57
                  ruleFormat: v2015-08-08
                  rules:
                    name: default
                    criteria: []
                    children: []
                    options:
                      is_secure: false
                    behaviors:
                      - name: origin
                        options:
                          httpPort: 80
                          enableTrueClientIp: false
                          compress: true
                          cacheKeyHostname: "ORIGIN_HOSTNAME"
                          forwardHostHeader: "REQUEST_HOST_HEADER"
                          hostname: "origin.test.com"
                          originType: "CUSTOMER"
                      - name: cpCode
                        options:
                          value:
                            id: 12345
                            name: "my CP code"
                schema:
                  $ref: "#/components/schemas/property-version-rules-get-response"
        parameters:
          - $ref: "#/components/parameters/trait_usePrefixesHeader_PAPI-Use-Prefixes"
          - $ref: "#/components/parameters/trait_contractParamOptional_contractId"
          - $ref: "#/components/parameters/trait_groupParamOptional_groupId"
          - $ref: "#/components/parameters/trait_validateRulesParam_validateRules"
          - $ref: "#/components/parameters/trait_validateModeParam_validateMode"
      head:
        summary: Get a rule tree's digest
        description: |
          This operation gets the rule
          tree's Etag without the rule tree object. Ordinarily when you
          [get a rule tree](https://papi-akamai.readme.io/reference/propertiespropertyidversionspropertyversionrules#get_properties-propertyid-versions-propertyversion-rules), the response
          includes a large rule tree object. As discussed in
          [Concurrency control](doc:concurrency-control), it
          includes a top-level `etag` data digest to use when
          [writing back the data](https://papi-akamai.readme.io/reference/propertiespropertyidversionspropertyversionrules#put_properties-propertyid-versions-propertyversion-rules). Use this
          operation if you simply want to get the `Etag` as a header
          without the data.
        operationId: "HEAD_properties-propertyId-versions-propertyVersion-rules"
        responses:
          204:
            description: ""
            headers:
              Etag:
                schema:
                  type: string
        parameters:
          - name: "Accept"
            in: header
            required: true
            schema:
              type: string
          - $ref: "#/components/parameters/trait_contractParamOptional_contractId"
          - $ref: "#/components/parameters/trait_groupParamOptional_groupId"
          - $ref: "#/components/parameters/trait_validateRulesParam_validateRules"
          - $ref: "#/components/parameters/trait_validateModeParam_validateMode"
      put:
        summary: Update a rule tree
        description: |
          To write a rule tree to a property version, make a PUT request
          to the same resource as the GET request that reads it, passing
          in the rule object in the body of the request. See the
          [Rule Trees](doc:rule-trees)
          section for details on the rule tree's structure. Use this
          operation also to
          [freeze a set of rules](doc:freeze-a-rule-trees-feature-set)
          to a rule format version to ensure no change in a deployed
          activation's behavior. Set the `validateRules` query parameter
          to `false` to bypass a set of validation tests that may
          significantly slow this operation's execution time. See
          [Fast validation and activation](doc:fast-validation)
          for guidance on when to defer validation. See
          [JSON problems](doc:json-problem-responses)
          for information on how validation data is embedded within the
          response object.
        operationId: "PUT_properties-propertyId-versions-propertyVersion-rules"
        responses:
          200:
            description: ""
            headers:
              X-Limit-Elements-Per-Property-Limit:
                schema:
                  type: string
              X-Limit-Elements-Per-Property-Remaining:
                schema:
                  type: string
              X-Limit-Max-Nested-Rules-Limit:
                schema:
                  type: string
              X-Limit-Max-Nested-Rules-Remaining:
                schema:
                  type: string
              X-Limit-Clientip-Per-Property-Limit:
                schema:
                  type: string
              X-Limit-Clientip-Per-Property-Remaining:
                schema:
                  type: string
              X-Limit-Max-Clientip-Per-Match-Limit:
                schema:
                  type: string
              X-Limit-Max-Clientip-Per-Match-Remaining:
                schema:
                  type: string
              Etag:
                schema:
                  type: string
            content:
              application/json:
                example:
                  accountId: act_1-1TJZFB
                  contractId: ctr_1-1TJZH5
                  groupId: grp_15225
                  propertyId: prp_173136
                  propertyVersion: 3
                  etag: a9dfe78cf93090516bde891d009eaf57
                  rules:
                    name: default
                    children:
                      - name: "Handle /my-path"
                        criteriaMustSatisfy: all
                        criteria:
                          - name: path
                            value:
                              - "/my-path"
                        behaviors:
                          - name: caching
                            behavior: max-age
                            ttl: "1m"
                  errors:
                    - type: "/papi/v0/errors/validation.required_behavior"
                      title: "Missing required behavior in default rule"
                      detail: "In order for this property to work correctly behavior Content Provider Code needs to be present in the default section"
                      instance: "/papi/v0/properties/prp_173136/versions/3/rules#err_100"
                      behaviorName: cpCode
                    - type: "/papi/v0/errors/validation.required_behavior"
                      title: "Missing required behavior in default rule"
                      detail: "In order for this property to work correctly behavior Origin needs to be present in the default section"
                      instance: "/papi/v0/properties/prp_173136/versions/3/rules#err_101"
                      behaviorName: origin
                schema:
                  $ref: "#/components/schemas/property-version-rules-get-response"
        requestBody:
          required: true
          content:
            application/json:
              example:
                rules:
                  name: default
                  children:
                    - name: "Handle /my-path"
                      criteriaMustSatisfy: all
                      criteria:
                        - name: path
                          value:
                            - "/my-path"
                      behaviors:
                        - name: caching
                          behavior: max-age
                          ttl: "1m"
              schema:
                $ref: "#/components/schemas/property-version-rules-set-request"
        parameters:
          - name: "If-Match"
            in: header
            required: true
            schema:
              type: string
          - $ref: "#/components/parameters/trait_usePrefixesHeader_PAPI-Use-Prefixes"
          - $ref: "#/components/parameters/trait_contractParamOptional_contractId"
          - $ref: "#/components/parameters/trait_groupParamOptional_groupId"
          - $ref: "#/components/parameters/trait_validateRulesParam_validateRules"
          - $ref: "#/components/parameters/trait_validateModeParam_validateMode"
          - $ref: "#/components/parameters/trait_dryRunParam_dryRun"
      patch:
        summary: Patch a rule tree
        description: |
          Selectively modify a rule tree using [JSON
          patch](http://jsonpatch.com) syntax. As a component of the
          larger [Bulk patch a set of properties](https://papi-akamai.readme.io/reference/bulkrules-patch-requests#post_bulk-rules-patch-requests), this
          operation patches an individual rule tree. See [Bulk Search
          and Update](doc:learn-about-bulk) for more information.
          To bypass a set of validation tests that may significantly
          slow this operation's execution time, set the `validateRules`
          query parameter to `false` or `validateMode` to `fast`. See
          [Fast validation, activation, and fallback](doc:fast-validation) for more
          information.
        operationId: "PATCH_properties-propertyId-versions-propertyVersion-rules"
        responses:
          200:
            description: ""
            headers:
              X-Limit-Elements-Per-Property-Limit:
                schema:
                  type: string
              X-Limit-Elements-Per-Property-Remaining:
                schema:
                  type: string
              X-Limit-Max-Nested-Rules-Limit:
                schema:
                  type: string
              X-Limit-Max-Nested-Rules-Remaining:
                schema:
                  type: string
              X-Limit-Clientip-Per-Property-Limit:
                schema:
                  type: string
              X-Limit-Clientip-Per-Property-Remaining:
                schema:
                  type: string
              X-Limit-Max-Clientip-Per-Match-Limit:
                schema:
                  type: string
              X-Limit-Max-Clientip-Per-Match-Remaining:
                schema:
                  type: string
              Etag:
                schema:
                  type: string
            content:
              application/json:
                example:
                  accountId: act_1-1TJZFB
                  contractId: ctr_1-1TJZH5
                  groupId: grp_15225
                  propertyId: prp_173136
                  propertyVersion: 3
                  etag: a9dfe78cf93090516bde891d009eaf57
                  rules:
                    name: default
                    children:
                      - name: "Handle /my-path"
                        criteriaMustSatisfy: all
                        criteria:
                          - name: path
                            value:
                              - "/my-path"
                        behaviors:
                          - name: caching
                            behavior: max-age
                            ttl: "1m"
                  errors:
                    - type: "/papi/v0/errors/validation.required_behavior"
                      title: "Missing required behavior in default rule"
                      detail: "In order for this property to work correctly behavior Content Provider Code needs to be present in the default section"
                      instance: "/papi/v0/properties/prp_173136/versions/3/rules#err_100"
                      behaviorName: cpCode
                    - type: "/papi/v0/errors/validation.required_behavior"
                      title: "Missing required behavior in default rule"
                      detail: "In order for this property to work correctly behavior Origin needs to be present in the default section"
                      instance: "/papi/v0/properties/prp_173136/versions/3/rules#err_101"
                      behaviorName: origin
                schema:
                  $ref: "#/components/schemas/property-version-rules-get-response"
        requestBody:
          required: true
          content:
            application/json-patch+json:
              schema:
                $ref: "#/components/schemas/property-version-rules-patch-request"
              example:
                - op: replace
                  path: "/rules/options/is_secure"
                  value: true
                - op: replace
                  path: "/rules/children/0/name"
                  value: "Handle /my-path"
        parameters:
          - name: "If-Match"
            in: header
            required: true
            schema:
              type: string
          - name: "PAPI-Use-Prefixes"
            description: |
              Sets whether to display three-letter prefixes in various ID values in response data. This may override the client's default `usePrefixes` setting. See [ID Prefixes](doc:id-prefixes).
            in: header
            required: true
            schema:
              type: string
          - $ref: "#/components/parameters/trait_contractParamOptional_contractId"
          - $ref: "#/components/parameters/trait_groupParamOptional_groupId"
          - $ref: "#/components/parameters/trait_validateRulesParam_validateRules"
          - $ref: "#/components/parameters/trait_validateModeParam_validateMode"
          - $ref: "#/components/parameters/trait_dryRunParam_dryRun"
      parameters:
        - name: propertyVersion
          in: path
          required: true
          description: |
            Property's incremental version number.
          schema:
            type: integer
        - name: propertyId
          in: path
          required: true
          description: |
            Unique identifier for the property.
            See [ID prefixes](doc:id-prefixes)
            for details on omitting the value's `prp_` prefix.
          schema:
            type: string
  components:
    schemas:
      property-version-rules-set-request:
        type: object
      operation:
        type: object
      path:
        type: object
        properties:
          path:
            description: |
              A JSON Pointer path.
            type: string
      property-version-rules-patch-request:
        type: array
        items:
          $ref: "#/components/schemas/operation"
      property-version-rules-get-response:
        type: object
        properties:
          accountId:
            type: string
          contractId:
            default: SIERRA
            type: string
          etag:
            description: |
              A digest with which to check the [data's integrity](doc:concurrency-control).
            type: string
          groupId:
            type: string
          propertyId:
            type: string
          propertyVersion:
            description: |
              The [version](#version) of the property that a rule tree represents.
            type: integer
          ruleFormat:
            description: |
              Indicates the versioned set of features and criteria that are currently applied to a rule tree. See [API versioning](doc:api-versioning) for more information.
            type: string
          rules:
            description: |
              Specifies the executable logic to apply to cached edge content. The outer [Envelope](#envelope) object's `rules` object specifies the relevant top-level `default` rule object. See the [Rule Trees](doc:rule-trees) section for guidance on how to structure the data.
            type: object
            required:
              - "behaviors"
              - "name"
            properties:
              advancedOverride:
                description: |
                  A block of post-processing XML metadata that your Akamai representative can apply on your behalf. You need to configure this separately for each property. Use the more recent `customOverride` member to apply the same XML metadata to more than one property.
                type: string
              behaviors:
                type: array
                items:
                  description: |
                    A series of [behavior](http://learn.akamai.com/en-us/api/core_features/property_manager/vlatest.html#behaviors) objects, which execute after the set of `criteria` evaluates. Behavior and criteria objects are structured identically. Optional on nested rules.
                  type: object
                  required:
                    - "name"
                    - "options"
                  properties:
                    locked:
                      description: |
                        Indicates a behavior or criteria that you arrange with your Akamai representative to lock so that you can't modify it, typically to protect sensitive data from erroneous changes.
                      type: string
                    name:
                      description: |
                        The name of the behavior.
                      type: string
                    options:
                      description: |
                        A variable set of options that configure each behavior. See the [PAPI Feature Catalog Reference](http://learn.akamai.com/en-us/api/core_features/property_manager/vlatest.html) for details on each.
                      type: object
                      additionalProperties: true
                    uuid:
                      description: |
                        A data hash that indicates an _advanced_ behavior. When present, you may not modify the contents of the behavior, and need to provide the same `uuid` value when modifying the rule tree. See [Advanced and locked features](doc:advanced-and-locked-features).
                      type: string
              children:
                type: array
                items:
                  description: |
                    A series of nested [Rule](#rule) objects that execute after the current rule's `criteria` and `behaviors`.
                  type: object
              comment:
                description: |
                  A descriptive comment to help you track the rule's function.
                type: string
              criteria:
                type: array
                items:
                  description: |
                    A series of [criteria](http://learn.akamai.com/en-us/api/core_features/property_manager/vlatest.html#criteria) objects, which form a set of logical tests that may prevent the rule's `behaviors` from executing. Behavior and criteria objects are structured identically.
                  type: object
              criteriaLocked:
                description: |
                  Within child rules, this prohibits any modifications to `criteria` objects. Contact your Akamai representative to change the value.
                type: boolean
              customOverride:
                description: |
                  Specifies post-processing XML metadata that your Akamai representative can create on your behalf. Once available with the [List custom overrides](https://papi-akamai.readme.io/reference/custom-overrides#get_custom-overrides) operation, you can assign an `overrideId` to more than one property's `default` rule. See [Custom behaviors and overrides](doc:custom-behaviors-and-overrides) for guidance.
                type: object
                required:
                  - "name"
                  - "overrideId"
                properties:
                  name:
                    description: |
                      The name of the custom override, which may vary from what appears in the [List custom overrides](https://papi-akamai.readme.io/reference/custom-overrides#get_custom-overrides) operation's response object.
                    type: string
                  overrideId:
                    description: |
                      Uniquely identifies the predefined custom override metadata you want to append to the current rule. See [ID prefixes](doc:id-prefixes) for details on how to omit the ID's `cbo_` prefix.
                    type: string
              name:
                description: |
                  A description of the rule. The top-level rule must be named `default`.
                type: string
              options:
                description: |
                  Flags that apply to the top-level rule object.
                type: object
                properties:
                  is_secure:
                    description: |
                      When enabled, serves the property's content over SSL. Doing so may enable additional rule behaviors.
                    type: boolean
              uuid:
                description: |
                  A data hash that indicates the rule contains at least one _advanced_ behavior or criteria, each identified with its own `uuid` member. When this member is present on the rule, you may not remove any advanced features it contains, or change their sequence. You need to provide the same `uuid` value when modifying the rule tree. See [Advanced and locked features](doc:advanced-and-locked-features).
                type: string
              variables:
                type: array
                items:
                  description: |
                    Declares a variable. See [Variables](#variables) for guidance on how variables may appear within a rule tree.
                  type: object
                  required:
                    - "hidden"
                    - "name"
                    - "sensitive"
                  properties:
                    description:
                      description: |
                        Text for you to keep track of how you use each variable.
                      type: string
                    hidden:
                      description: |
                        When enabled, the variable is suppressed from session response headers, often used to test content as described in the [Debug variables](doc:debug-variables) section.
                      type: boolean
                    name:
                      description: |
                        The underlying root name of the variable, which needs to be unique within the set of `variables`.
                      type: string
                    sensitive:
                      description: |
                        When enabled, the variable is suppressed from session responses as `hidden` ones, but it also can't be invoked within any behaviors that assign values to cookies or response headers. You also can't assign a `sensitive` variable to another one that isn't `sensitive`, and you can't add it to custom logging fields. Use this more stringent option for any personally identifiable information, typically after initially testing on the staging network.
                      type: boolean
                    value:
                      description: |
                        Initializes a default value. Omitting this member initializes the variable with an empty string.
                      type: string
    responses: {}
    parameters:
      trait_contractParamRequired_contractId:
        name: contractId
        in: query
        required: true
        description: |
          Unique identifier for the contract.
          See [ID prefixes](doc:id-prefixes)
          for details on omitting the value's `ctr_` prefix.
        schema:
          type: string
      trait_contractParamOptional_contractId:
        name: contractId
        in: query
        description: |
          Unique identifier for the contract.
          The parameter is optional if the property has been
          provisioned under only one contract.
          Otherwise you need to specify it along with the `groupId`.
          (In other operations that don't specify a `propertyId` URL
          parameter, this parameter is always required.)
          See [ID prefixes](doc:id-prefixes)
          for details on omitting the value's `ctr_` prefix.
        schema:
          type: string
      trait_contractParamOptionalBulk_contractId:
        name: contractId
        in: query
        description: |
          Optionally filters bulk searches to properties provisioned
          under the specified contract. For bulk operations, you can
          specify `contractId` and `groupId` independently from each
          other.
        schema:
          type: string
      trait_groupParamRequired_groupId:
        name: groupId
        in: query
        required: true
        description: |
          Unique identifier for the group.
          See [ID prefixes](doc:id-prefixes)
          for details on omitting the value's `grp_` prefix.
        schema:
          type: string
      trait_groupParamOptional_groupId:
        name: groupId
        in: query
        description: |
          Unique identifier for the group.
          The parameter is optional if the property has been
          provisioned under only one group.
          Otherwise you need to specify it along with the `contractId`.
          (In other operations that don't specify a `propertyId` URL
          parameter, this parameter is always required.)
          See [ID prefixes](doc:id-prefixes)
          for details on omitting the value's `grp_` prefix.
        schema:
          type: string
      trait_groupParamOptionalBulk_groupId:
        name: groupId
        in: query
        description: |
          Optionally filters bulk searches to properties provisioned
          under the specified group. For bulk operations, you can
          specify `contractId` and `groupId` independently from each
          other.
        schema:
          type: string
      trait_optionsParam_options:
        name: options
        in: query
        description: |
          Comma-separated list of options to enable; `mapDetails`
          enables extra mapping-related information.
        schema:
          type: string
      trait_validateHostnamesParam_validateHostnames:
        name: validateHostnames
        in: query
        description: |
          When `false` (the default), skips validation tests that
          would identify potential hostname-related problems within
          the response object's `errors` and `warnings` arrays. See
          [Property hostname errors](doc:property-hostname-errors)
          for details on relevant error feedback. See
          [Fast validation, activation, and fallback](doc:fast-validation)
          for details on the delays this might avoid.
        schema:
          default: true
          type: boolean
      trait_validateRulesParam_validateRules:
        name: validateRules
        in: query
        description: |
          Set to `true` by default. When `false`, skips validation
          tests that would identify potential problems within the
          response object's `errors` and `warnings` arrays. See the
          [JSON problems](doc:json-problem-responses)
          section for details on this error feedback. See
          [Fast validation, activation, and fallback](doc:fast-validation)
          for details on the delays this might avoid.
        schema:
          default: true
          type: boolean
      trait_validateModeParam_validateMode:
        name: validateMode
        in: query
        description: |
          With `validateRules` enabled, setting this to `fast`
          performs a quick validation check based on the provided
          JSON. This is faster than the default `full` validation,
          which performs more extensive checks on the converted XML
          metadata configuration.
        schema:
          default: full
          type: string
          enum:
            - "full"
            - "fast"
      trait_dryRunParam_dryRun:
        name: dryRun
        in: query
        description: |
          With `validateRules` also enabled, allows for a _dry run_ in
          order to gather any possible errors without saving the rule
          tree.
        schema:
          default: false
          type: boolean
      trait_paginated_offset:
        name: offset
        in: query
        description: |
          For paginated responses, specifies the page of results to
          include, starting from `0`.
        schema:
          minimum: 0
          type: integer
      trait_paginated_limit:
        name: limit
        in: query
        description: |
          For paginated responses, specifies the number of results to
          include on each page.
        schema:
          minimum: 1
          type: integer
      trait_usePrefixesHeader_PAPI-Use-Prefixes:
        name: "PAPI-Use-Prefixes"
        description: |
          Sets whether to display three-letter prefixes in various ID values in response data. This may override the client's default `usePrefixes` setting. See [ID Prefixes](doc:id-prefixes).
        in: header
        required: true
        schema:
          type: string
    examples: {}
    requestBodies: {}
    headers: {}
    securitySchemes: {}
    links: {}
    callbacks: {}
