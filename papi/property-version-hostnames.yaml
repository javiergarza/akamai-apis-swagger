---
  openapi: "3.0.0"
  servers:
    - url: https://akzz-XXXXXXXXXXXXXXXX-XXXXXXXXXXXXXXXX.luna.akamaiapis.net/papi/v1
  info:
    title: "Property version hostnames"
    version: v1
  paths:
    /properties/{propertyId}/versions/{propertyVersion}/hostnames:
      get:
        summary: List a property's hostnames
        description: |
          This lists all the hostnames assigned to a property version, which may be a subset of [all available edge hostnames](https://papi-akamai.readme.io/reference/edgehostnames#get_edgehostnames).
        operationId: "GET_properties-propertyId-versions-propertyVersion-hostnames"
        responses:
          200:
            description: ""
            headers:
              X-Limit-Hosts-Per-Property-Limit:
                schema:
                  type: string
              X-Limit-Hosts-Per-Property-Remaining:
                schema:
                  type: string
              ETag:
                schema:
                  type: string
            content:
              application/json:
                example:
                  accountId: act_1-1TJZFB
                  contractId: ctr_1-1TJZH5
                  groupId: grp_15225
                  propertyId: prp_175780
                  propertyVersion: 1
                  etag: "6aed418629b4e5c0"
                  hostnames:
                    items:
                      - cnameType: "EDGE_HOSTNAME"
                        edgeHostnameId: ehn_895822
                        cnameFrom: "example.com"
                        cnameTo: "example.com.edgesuite.net"
                      - cnameType: "EDGE_HOSTNAME"
                        edgeHostnameId: ehn_895833
                        cnameFrom: "m.example.com"
                        cnameTo: "m.example.com.edgesuite.net"
                schema:
                  $ref: "#/components/schemas/property-version-hostnames-get-response"
        parameters:
          - $ref: "#/components/parameters/trait_usePrefixesHeader_PAPI-Use-Prefixes"
          - $ref: "#/components/parameters/trait_contractParamOptional_contractId"
          - $ref: "#/components/parameters/trait_groupParamOptional_groupId"
          - $ref: "#/components/parameters/trait_validateHostnamesParam_validateHostnames"
      put:
        summary: Update a property's hostnames
        description: |
          Modify the set of hostname entries for a property version. For
          each hostname entry, specify a `cnameFrom` along with either a
          `cnameTo` or `edgeHostnameId`.
          If you remove a hostname from an active property configuration,
          you can then reassign it to another property, or use the
          [Edge Hostname API](https://developer.akamai.com/api/core_features/edge_hostnames/v1.html#getcertificatefortheedgehostname)
          (HAPI) to delete the edge hostname.

          There are no POST or DELETE operations to add or remove
          hostnames from a property, so to assign them you need to
          make a PUT request that specifies the entire set as an
          array. Since the data sent in the PUT request is an array,
          adding an `If-Match` HTTP header is the only way to prevent
          overwriting edits from another client. See [Concurrency
          control](doc:concurrency-control) for more information on this
          technique.

          If you activate a property version that specifies a hostname
          already active on another property, it's removed from that
          property, and a new property version is automatically
          created and activated with the change. Otherwise you don't
          receive any warning when saving a set of overlapping
          hostnames on an inactive version.

          Set the `validateHostnames` query parameter to `false` to
          bypass a set of validation tests that may significantly slow
          this operation's execution time. See [Fast validation,
          activation, and fallback](doc:fast-validation) for guidance on when to
          defer validation. See [JSON problems](doc:json-problem-responses) for
          information on how validation data is embedded within the
          response object.


        operationId: "PUT_properties-propertyId-versions-propertyVersion-hostnames"
        responses:
          200:
            description: ""
            headers:
              ETag:
                schema:
                  type: string
              X-Limit-Hosts-Per-Property-Limit:
                schema:
                  type: string
              X-Limit-Hosts-Per-Property-Remaining:
                schema:
                  type: string
            content:
              application/json:
                example:
                  accountId: act_1-1TJZFB
                  contractId: ctr_1-1TJZH5
                  groupId: grp_15225
                  propertyId: prp_175780
                  propertyVersion: 1
                  etag: "6aed418629b4e5c0"
                  hostnames:
                    items:
                      - cnameType: "EDGE_HOSTNAME"
                        edgeHostnameId: ehn_895822
                        cnameFrom: "example.com"
                        cnameTo: "example.com.edgesuite.net"
                      - cnameType: "EDGE_HOSTNAME"
                        edgeHostnameId: ehn_895833
                        cnameFrom: "m.example.com"
                        cnameTo: "m.example.com.edgesuite.net"
                schema:
                  $ref: "#/components/schemas/property-version-hostnames-get-response"
        requestBody:
          required: true
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/property-version-hostnames-set-request"
              example:
                - cnameType: "EDGE_HOSTNAME"
                  cnameFrom: "m.example.com"
                  cnameTo: "example.com.edgesuite.net"
                - cnameType: "EDGE_HOSTNAME"
                  edgeHostnameId: ehn_895824
                  cnameFrom: "example3.com"
        parameters:
          - name: "If-Match"
            in: header
            required: true
            schema:
              type: string
          - $ref: "#/components/parameters/trait_usePrefixesHeader_PAPI-Use-Prefixes"
          - $ref: "#/components/parameters/trait_contractParamOptional_contractId"
          - $ref: "#/components/parameters/trait_groupParamOptional_groupId"
          - $ref: "#/components/parameters/trait_validateHostnamesParam_validateHostnames"
      parameters:
        - name: propertyVersion
          in: path
          required: true
          description: |
            Property's incremental version number.
          schema:
            type: integer
        - name: propertyId
          in: path
          required: true
          description: |
            Unique identifier for the property.
            See [ID prefixes](doc:id-prefixes)
            for details on omitting the value's `prp_` prefix.
          schema:
            type: string
  components:
    schemas:
      property-version-hostnames-set-request:
        type: array
        items:
          type: object
          properties:
            cnameType:
              type: string
              enum:
                - "EDGE_HOSTNAME"
            cnameFrom:
              type: string
            cnameTo:
              type: string
            edgeHostnameId:
              type: string
      property-version-hostnames-get-response:
        description: |
          A common outer wrapping object structure that provides additional contextual details for a set of requested data. The data itself is available under various inner members' `items` array, even individual items. See [ID prefixes](doc:id-prefixes) for more information.
        type: object
        properties:
          accountId:
            type: string
          contractId:
            default: SIERRA
            type: string
          etag:
            type: string
          groupId:
            type: string
          hostnames:
            description: |
              The set of requested property hostnames, available within an `items` array.
            type: object
            properties:
              items:
                type: array
                items:
                  description: |
                    Specifies an edge hostname that's applied to a property version. Writing data to this resource requires that you PUT an array of _all_ the hostname objects, each containing `edgeHostnameId`, `cnameFrom`, and `cnameTo` members. This request array matches the `hostnames.items` in the response.
                  type: object
                  required:
                    - "cnameFrom"
                    - "cnameType"
                    - "edgeHostnameId"
                  properties:
                    cnameFrom:
                      description: |
                        The original origin's hostname.
                      type: string
                    cnameTo:
                      description: |
                        The hostname for edge content, corresponding to the edge hostname object's `edgeHostnameDomain` member.
                      type: string
                    cnameType:
                      description: |
                        Only one supported `EDGE_HOSTNAME` value.
                      type: string
                      enum:
                        - "EDGE_HOSTNAME"
                    edgeHostnameId:
                      description: |
                        Uniquely identifies each edge hostname. See [ID prefixes](doc:id-prefixes) for details on how to omit the ID's `ehn_` prefix.
                      type: string
          propertyVersion:
            type: integer
          propertyId:
            type: string
    responses: {}
    parameters:
      trait_contractParamRequired_contractId:
        name: contractId
        in: query
        required: true
        description: |
          Unique identifier for the contract.
          See [ID prefixes](doc:id-prefixes)
          for details on omitting the value's `ctr_` prefix.
        schema:
          type: string
      trait_contractParamOptional_contractId:
        name: contractId
        in: query
        description: |
          Unique identifier for the contract.
          The parameter is optional if the property has been
          provisioned under only one contract.
          Otherwise you need to specify it along with the `groupId`.
          (In other operations that don't specify a `propertyId` URL
          parameter, this parameter is always required.)
          See [ID prefixes](doc:id-prefixes)
          for details on omitting the value's `ctr_` prefix.
        schema:
          type: string
      trait_contractParamOptionalBulk_contractId:
        name: contractId
        in: query
        description: |
          Optionally filters bulk searches to properties provisioned
          under the specified contract. For bulk operations, you can
          specify `contractId` and `groupId` independently from each
          other.
        schema:
          type: string
      trait_groupParamRequired_groupId:
        name: groupId
        in: query
        required: true
        description: |
          Unique identifier for the group.
          See [ID prefixes](doc:id-prefixes)
          for details on omitting the value's `grp_` prefix.
        schema:
          type: string
      trait_groupParamOptional_groupId:
        name: groupId
        in: query
        description: |
          Unique identifier for the group.
          The parameter is optional if the property has been
          provisioned under only one group.
          Otherwise you need to specify it along with the `contractId`.
          (In other operations that don't specify a `propertyId` URL
          parameter, this parameter is always required.)
          See [ID prefixes](doc:id-prefixes)
          for details on omitting the value's `grp_` prefix.
        schema:
          type: string
      trait_groupParamOptionalBulk_groupId:
        name: groupId
        in: query
        description: |
          Optionally filters bulk searches to properties provisioned
          under the specified group. For bulk operations, you can
          specify `contractId` and `groupId` independently from each
          other.
        schema:
          type: string
      trait_optionsParam_options:
        name: options
        in: query
        description: |
          Comma-separated list of options to enable; `mapDetails`
          enables extra mapping-related information.
        schema:
          type: string
      trait_validateHostnamesParam_validateHostnames:
        name: validateHostnames
        in: query
        description: |
          When `false` (the default), skips validation tests that
          would identify potential hostname-related problems within
          the response object's `errors` and `warnings` arrays. See
          [Property hostname errors](doc:property-hostname-errors)
          for details on relevant error feedback. See
          [Fast validation, activation, and fallback](doc:fast-validation)
          for details on the delays this might avoid.
        schema:
          default: true
          type: boolean
      trait_validateRulesParam_validateRules:
        name: validateRules
        in: query
        description: |
          Set to `true` by default. When `false`, skips validation
          tests that would identify potential problems within the
          response object's `errors` and `warnings` arrays. See the
          [JSON problems](doc:json-problem-responses)
          section for details on this error feedback. See
          [Fast validation, activation, and fallback](doc:fast-validation)
          for details on the delays this might avoid.
        schema:
          default: true
          type: boolean
      trait_validateModeParam_validateMode:
        name: validateMode
        in: query
        description: |
          With `validateRules` enabled, setting this to `fast`
          performs a quick validation check based on the provided
          JSON. This is faster than the default `full` validation,
          which performs more extensive checks on the converted XML
          metadata configuration.
        schema:
          default: full
          type: string
          enum:
            - "full"
            - "fast"
      trait_dryRunParam_dryRun:
        name: dryRun
        in: query
        description: |
          With `validateRules` also enabled, allows for a _dry run_ in
          order to gather any possible errors without saving the rule
          tree.
        schema:
          default: false
          type: boolean
      trait_paginated_offset:
        name: offset
        in: query
        description: |
          For paginated responses, specifies the page of results to
          include, starting from `0`.
        schema:
          minimum: 0
          type: integer
      trait_paginated_limit:
        name: limit
        in: query
        description: |
          For paginated responses, specifies the number of results to
          include on each page.
        schema:
          minimum: 1
          type: integer
      trait_usePrefixesHeader_PAPI-Use-Prefixes:
        name: "PAPI-Use-Prefixes"
        description: |
          Sets whether to display three-letter prefixes in various ID values in response data. This may override the client's default `usePrefixes` setting. See [ID Prefixes](doc:id-prefixes).
        in: header
        required: true
        schema:
          type: string
    examples: {}
    requestBodies: {}
    headers: {}
    securitySchemes: {}
    links: {}
    callbacks: {}
